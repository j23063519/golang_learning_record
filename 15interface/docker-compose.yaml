version: "3.8"

services:
  drone:
    image: drone/drone:2.16.0
    container_name: droneServer
    hostname: droneServer
    ports:
      - "8079:80"
    environment:
      - DRONE_SERVER_HOST=localhost:8080
      - DRONE_SERVER_PROTO=http
      - DRONE_SERVER_PROXY_HOST=${DRONE_SERVER_PROXY_HOST}
      - DRONE_SERVER_PROXY_PROTO=https
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_COOKIE_SECRET=${DRONE_COOKIE_SECRET}
      - DRONE_COOKIE_TIMEOUT=720h
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_CRON_DISABLED=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - DRONE_LOGS_TRACE=true
    volumes:
      - ./data:/data
    networks:
      - drone
    restart: always
  runner:
    image: drone/drone-runner-docker:1.8.3
    container_name: droneRunner
    hostname: droneRunner
    environment:
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_TMATE_ENABLED=true
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - drone
    restart: always

networks:
  drone:
    driver: bridge